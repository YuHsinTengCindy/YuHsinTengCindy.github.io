<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Var Let Const on Cindy&#39;s blog</title>
    <link>https://YuHsinTengCindy.github.io/tags/var-let-const/</link>
    <description>Recent content in Var Let Const on Cindy&#39;s blog</description>
    <generator>Hugo -- 0.125.7</generator>
    <language>zh-tw</language>
    <lastBuildDate>Fri, 28 Feb 2025 01:59:14 +0800</lastBuildDate>
    <atom:link href="https://YuHsinTengCindy.github.io/tags/var-let-const/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>JavaScript 中用 var, let, 以及 const 有什麼差別？</title>
      <link>https://YuHsinTengCindy.github.io/docs/verletconst/</link>
      <pubDate>Fri, 28 Feb 2025 01:59:14 +0800</pubDate>
      <guid>https://YuHsinTengCindy.github.io/docs/verletconst/</guid>
      <description>繼續這邊來整理JavaScript 中變數跟常數var, let, 以及 const 有什麼差別？
可以從提升、初始化、重複宣告、重新賦值、作用域看有不同的行為。
提升、初始化 我們可以在上一篇整理文章中，看到兩階段運行中提升的變化。
var 宣告的變數會自動初始化，因此在宣告前就使用變數，不會出現錯誤，而會是 undefined。
但是 let 與 const 則，而是會進到暫時死區 (TDZ)，因此在 let 與 const 宣告變數前使用該變數，會出現錯誤。
也可以在當中看到var 可以被重複宣告let 與 const 則不行。
var 可以被重複宣告 var 可以被重複宣告，但是 let 與 const 則不行。
所以當用的是 var 時，可以做到以下這樣：
var greeting = &amp;#34;Hello! &amp;#34;; var greeting = &amp;#34;Hi Hi&amp;#34;; let 不能重複宣告，但可以重新賦值 所以會如下面這樣：
如果let 像上面重複宣告，
let greeting = &amp;ldquo;Hello! &amp;ldquo;;
let greeting = &amp;ldquo;Hi Hi&amp;rdquo;;
會出錯 SyntaxError: Identifier &amp;lsquo;greeting&amp;rsquo; has already been declared</description>
    </item>
  </channel>
</rss>
