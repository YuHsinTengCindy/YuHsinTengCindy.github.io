<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Cindy&#39;s blog</title>
    <link>https://YuHsinTengCindy.github.io/</link>
    <description>Recent content on Cindy&#39;s blog</description>
    <generator>Hugo -- 0.125.7</generator>
    <language>zh-tw</language>
    <lastBuildDate>Fri, 14 Mar 2025 16:27:15 +0800</lastBuildDate>
    <atom:link href="https://YuHsinTengCindy.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>到底怎麼駭客整理自己的大腦?＿＿Project 50在紅什麼？為什麼要這麼做？</title>
      <link>https://YuHsinTengCindy.github.io/docs/project50/</link>
      <pubDate>Fri, 14 Mar 2025 16:27:15 +0800</pubDate>
      <guid>https://YuHsinTengCindy.github.io/docs/project50/</guid>
      <description>到底怎麼駭客整理自己的大腦? 思考是不是有這樣的狀況?休閒將心理學作為方法論研究，整理思考。
Project 50 ？Project 50在紅什麼？為什麼要這麼做？
2025年美國1%頂尖人士的7個生活方式——Project 50 如果你想成為未來 1%的頂尖人士，他們都有某些共同的習慣，而正是這些習慣讓他們站在產業鏈的頂端，讓他們如此成功。 Project 50 用以下7個最重要的習慣，組成改變你人生的50天生活挑戰
Project 50的挑戰，常包含運動、健康飲食、學習新技能、早睡早起等習慣，這些都能改善生活品質，讓人變得更有活力和動力。 當開始養成好習慣，會發現其他方面的生活也變得更順利，進入「正向增強循環」。
🏆 思考研究為什麼 Project 50 會成功？
時間夠長，能養成習慣，但不會讓人崩潰
習慣的養成平均需要 21~66 天，50 天剛好是一個理想區間，讓大腦適應並內化成自然行為。
相較於「一年計畫」這種太過遙遠的目標，50 天的挑戰確實讓人覺得更具可行性。
結構簡單，易於執行
Project 50 的規則通常很明確，如每天運動、閱讀 10 頁書、早睡早起等，這些都是簡單可行的行動。
它不像一些過於複雜的挑戰，需要大量計劃與調整，降低了「開始困難」的心理阻礙。
社群力量帶來動力
許多人會在社群媒體上分享自己的 Project 50 挑戰進度，這不僅能提升自我承諾感，也能獲得他人的鼓勵和支持，讓堅持變得更容易。
能迅速看到小成果，激勵持續進步
例如：堅持運動 10 天後，身體開始變得更有活力；學習新技能 20 天後，會發現自己真的進步了。
這種「短期回饋」讓人更願意繼續堅持下去，而不是因為看不到效果就放棄。
習慣一旦養成，就能帶來長遠影響
而且有沒有發現很有趣的事情，如果有回顧之前的文章：
拆分小任務 利用社交關係 轉述法 自我認同 自主感-&amp;gt;勝任感-&amp;gt;關聯感 </description>
    </item>
    <item>
      <title>到底怎麼駭客整理自己的大腦?＿＿分享一個有趣的內容，RTT？</title>
      <link>https://YuHsinTengCindy.github.io/docs/rtt/</link>
      <pubDate>Fri, 14 Mar 2025 16:13:39 +0800</pubDate>
      <guid>https://YuHsinTengCindy.github.io/docs/rtt/</guid>
      <description>到底怎麼駭客整理自己的大腦? 思考是不是有這樣的狀況?在休閒將心理學作為方法論研究，整理思考。
分享一個我聽到的podcasts
文森說書： 我一直覺得，自己一定要做些什麼事才能確保自己有價值｜我的RTT療程分享 但聽完後我更有興趣的是，想大概了解到底什麼是ＲＴＴ？ RTT 的起源 RTT 由英國知名催眠治療師 Marisa Peer 創立。 Marisa Peer是誰? 她曾用 RTT 的技術與各行各業頂尖的精英合作過，媒體進行訪問或是在平台進行演講。 入選《Tatler》雜誌的「英國 250 位最佳醫生」名單
Marisa_Peer
Rapid Transformational Therapy (RTT) 是什麼？ Rapid Transformational Therapy（快速轉化療法，簡稱 RTT）是一種結合多種心理自療法而成的療法。
這項方法被稱為快速轉化療法（RTT®），它是一種綜合性解決方案導向的治療方式，融合了多種心理學與治療技術，包括：
催眠治療（Hypnotherapy） 心理治療（Psychotherapy） 神經語言程式學（NLP） 認知行為療法（CBT） 神經科學（Neuroscience） 神經可塑性（Neuroplasticity） RTT® 旨在快速、有效且持久地改變個案的思維模式與行為習慣，其培訓課程幫助治療師改變對待個案的方式，並讓他們能夠在短短幾次療程內，創造迅速且長久的轉變。
如果深入討論，催眠療法（Hypnotherapy）、神經語言程式學（NLP）、認知行為療法（CBT）與心理學的綜合療法&amp;hellip;太多也太專業這不是我們可以深入討論的領域了。
但簡單法說，感覺就是如文森有說到的，Marisa Peer取各家精華為一派應用的感覺。
其核心目標是通過深入潛意識，找出並改變影響個人行為、信念與心理狀態的根源，進而在短時間內帶來持久的變化。這種療法強調「快速」且「深層」的心理轉變，與傳統心理治療相比，RTT 通常在 1-3 次療程內就能讓個案獲得顯著的改善，這也是它最大的特色之一。
分享一些我自己延伸研究 找到的有趣的內容
TEDx Talks|To reach beyond your limits by training your mind | Marisa Peer | TEDxKCS Crash course for phenomenal success | Marisa Peer 我喜歡她有趣的檸檬實驗，</description>
    </item>
    <item>
      <title>到底怎麼駭客自己的大腦? ＿＿思考是不是有這樣的狀況?</title>
      <link>https://YuHsinTengCindy.github.io/docs/self-determinationtheory/</link>
      <pubDate>Thu, 13 Mar 2025 22:54:34 +0800</pubDate>
      <guid>https://YuHsinTengCindy.github.io/docs/self-determinationtheory/</guid>
      <description>到底怎麼駭客自己的大腦?讓他執行一直執行完美的事情。
休閒將心理學資訊作為，整理思考。
思考是不是有這樣的狀況?
明知需要，做卻沒有動力? 甚是連開始都覺得困難?
常常想著變聰明?身材好?健康?
說沒有動力跟持久毅力，但很奇怪划手機看影片等卻又輕輕鬆鬆，兩三個小時不在話下?一整天都沒有問題?
那來思考跟理解&amp;quot;動機&amp;quot;是什麼?
外在動機，外在因素引響
內在動機，內部肯定引響
都在於自我決定理論，Self-determination theory
【人類行為的自覺和內在動機】
查詢驗證資料參考源: Deci和Ryan的自決理論（Self-determination theory）。（根據 Ryan, R.M. &amp;amp; Deci, E.L. (2000)。〈自我決定理論與內在動機、社會發展及幸福感的促進〉，發表於《美國心理學家》，第 55 卷第 1 期，頁 68-78。）
調節風格 (Regulatory Styles)
無調節 (Non-Regulation) 外部調節 (External Regulation) 內攝調節 (Introjected Regulation) 認同調節 (Identified Regulation) 整合調節 (Integrated Regulation) 內在調節 (Intrinsic Regulation)
是什麼調節動機？ (What regulates the motivation?)
無意圖、無價值感、無能感、缺乏控制 (Nonintentional, Nonvaluing, Incompetence, Lack of Control) 服從、外在獎勵與懲罰 (Compliance, External Rewards and Punishments) 自我控制、自尊涉入、內在獎勵與懲罰 (Self-Control, Ego-Involvement, Internal Rewards and Punishments) 個人重要性、有意識的價值觀 (Personal Importance, Conscious Valuing) 一致性、覺察、自我統合 (Congruence, Awareness, Synthesis With Self) 興趣、享受、內在滿足 (Interest, Enjoyment, Inherent Satisfaction)</description>
    </item>
    <item>
      <title>JavaScript 中用 var, let, 以及 const 有什麼差別？</title>
      <link>https://YuHsinTengCindy.github.io/docs/verletconst/</link>
      <pubDate>Fri, 28 Feb 2025 01:59:14 +0800</pubDate>
      <guid>https://YuHsinTengCindy.github.io/docs/verletconst/</guid>
      <description>繼續這邊來整理JavaScript 中變數跟常數var, let, 以及 const 有什麼差別？
可以從提升、初始化、重複宣告、重新賦值、作用域看有不同的行為。
提升、初始化 我們可以在上一篇整理文章中，看到兩階段運行中提升的變化。
var 宣告的變數會自動初始化，因此在宣告前就使用變數，不會出現錯誤，而會是 undefined。
但是 let 與 const 則，而是會進到暫時死區 (TDZ)，因此在 let 與 const 宣告變數前使用該變數，會出現錯誤。
也可以在當中看到var 可以被重複宣告let 與 const 則不行。
var 可以被重複宣告 var 可以被重複宣告，但是 let 與 const 則不行。
所以當用的是 var 時，可以做到以下這樣：
var greeting = &amp;#34;Hello! &amp;#34;; var greeting = &amp;#34;Hi Hi&amp;#34;; let 不能重複宣告，但可以重新賦值 所以會如下面這樣：
如果let 像上面重複宣告，
let greeting = &amp;ldquo;Hello! &amp;ldquo;;
let greeting = &amp;ldquo;Hi Hi&amp;rdquo;;
會出錯 SyntaxError: Identifier &amp;lsquo;greeting&amp;rsquo; has already been declared</description>
    </item>
    <item>
      <title>什麼是 Variable Hoisting ?JavaScript 變數提升</title>
      <link>https://YuHsinTengCindy.github.io/docs/variablehoisting/</link>
      <pubDate>Wed, 26 Feb 2025 21:04:16 +0800</pubDate>
      <guid>https://YuHsinTengCindy.github.io/docs/variablehoisting/</guid>
      <description>一邊整理JavaScript所學知識
來筆記釐清 JaveScript 在執行階段內文如何運行的思路。
什麼是 Variable Hoisting ?JavaScript 變數提升
我們用runtime的角度來看，它不是一口氣跑完，是分層兩階段運行，在創建期(Creation Phase)和執行期(Execution Phase)階段有不同得變化。
來分解動作
在 建立期 時，會兩階段運作
註冊名稱identifier（要那個東西的名字） 1-2. 進行初始化（初始化那個東西，通常是undefined) 在 執行期 時
執行函數/賦值（動作執行，或是給值，都是這個時候） 好的，來看
var a = 1;
console.log(a);
建立期: 1. var a 1-2.undefined 執行期: a = 1 console.log(a) /印出1 那同理可知，如果是這樣呢？
console.log(a);
var a =1;
console.log(a);
會印出什麼？
答案是： undefined （第一圈已知有var a也有初始化，但第二圈執行期時先跑了他，但這邊還沒有賦值） 1 （已知a=1,執行出結果1） 所以同理就可以理解
if(false){
var a = 1;
}
console.log(a);
是印出 undefined
那let呢？let不會變數提升？
No No~
要記得JS本身就是分層兩階段運行，不管怎麼寫就是兩階段運做，運行時就是會提昇，那到底為什麼會有出錯的狀況呢？
像是
console.log(b);</description>
    </item>
    <item>
      <title>整理學習React</title>
      <link>https://YuHsinTengCindy.github.io/docs/startlearningreact/</link>
      <pubDate>Wed, 26 Feb 2025 14:56:40 +0800</pubDate>
      <guid>https://YuHsinTengCindy.github.io/docs/startlearningreact/</guid>
      <description>React 是什麼？ 先來基本瞭解下，React 是什麼？
React 是一個陳述式、高效且具有彈性的 JavaScript 函式庫，用以建立使用者介面。它讓你使用小巧而獨立的「component」，來建立複雜的 UI。 由Ｆacebook在2013年開發出來的 嚴格上來說，React是函示庫（library),而不是框架（framework) 官網也大大地寫著：(React官網)
The library for web and native user interfaces
用於網頁和原生應用的使用者介面函式庫
框架（Framework） vs. 函式庫（Library） 簡單區別 &amp;#x1f680; 框架（Framework） &amp;#x1f6e0;&amp;#xfe0f; 函式庫（Library） 提供完整架構，規定開發方式 提供功能，開發者決定怎麼用 「框架呼叫你的程式」（控制反轉） 「你呼叫函式庫」（開發者主導） 有規範，要照它的規則寫 彈性高，可以自由組合 &amp;#x1f4a1; 比喻：
框架 = 連鎖手搖飲（基本著有標準 SOP，必須照流程做）
函式庫 = 夜市小吃（自由選擇想吃什麼、怎麼搭配）
例外與灰色地帶：為什麼有人會認為 React 是框架？ 雖然 React 被定義為函式庫，但當它與 React Router（路由）、Redux（狀態管理）等強大生態系工具 搭配使用時，它的 完整性 就變得類似於框架。因此，有些開發者在實務上會稱它為「框架級函式庫」。
然而，React 本身不強制這些工具，因此仍然歸類為函式庫。
為什麼要選擇學習使用 React ？ 編寫網頁需要用到三種語言：
HTML，CSS，JavaScrip
那先思考，那為什麼要使用React?
React 不是取代 HTML、CSS、JavaScript，而是讓 前端開發更高效、更有組織性、更易於維護 的一個工具。
&amp;#x1f4a1; 可以把它想像成：蓋房子的現代化工程技術，在 HTML、CSS、JavaScript 的基礎上，提供更強大的開發方式。</description>
    </item>
    <item>
      <title>學習資源整理</title>
      <link>https://YuHsinTengCindy.github.io/docs/resource/</link>
      <pubDate>Thu, 13 Feb 2025 18:29:22 +0800</pubDate>
      <guid>https://YuHsinTengCindy.github.io/docs/resource/</guid>
      <description>上課介紹的資源整理、線上自我學習資源整理 Python 為你自己學 Python 線上書
JavaScript javascript-questions
重新認識 JavaSript 鐵人 30 天
重新認識 Vue.js 線上書
CSS 日本優秀網站聚集地
日本傳統配色網站
運動曲線調節器
金魚都能懂的 CSS
Hugo 架站 Hugo 官網
Markdown 語法
MarkDown Emoji
框架/套件 Tailwindcss daisyui
alpine.js
django
Basic MDN 資訊字典
Stack-Overflow 資訊問題集
LeetCode 面試題大全 Explain This
其他 github job
syn tax 2024iThome鐵人賽 強者們學習資源
同學部落格
培鈞
雷雷</description>
    </item>
    <item>
      <title>如何開始建立Hugo Web page?</title>
      <link>https://YuHsinTengCindy.github.io/docs/forhugo/</link>
      <pubDate>Thu, 13 Feb 2025 14:50:52 +0800</pubDate>
      <guid>https://YuHsinTengCindy.github.io/docs/forhugo/</guid>
      <description>如何開始建立Hugo Web page? 查詢網上資訊說5分鐘就可以建好？ 一開始學習時在網上搜尋資料時，看到這標題真的很吸引人
看到這個標題還想說，那…應該可以的吧？
但是怎麼樣就是少了什麼沒有辦法成功&amp;hellip;
然後看助教幫同學處理問題也是花了點時間的,一起學習的同學也說有看到那吸引人眼晴的標題，她也是吶喊「才怪…連老師都抓一個小時，怎麼可能 5 分鐘就建好崩潰」
回頭整理 最近想整理資訊，建立自己的blog就又開始搜尋
後來得知了很棒的建立資源，但版本必較舊了加上都是英文也是花了點時間吸收&amp;#x1f606;
整理一下資訊上來 主要還是不外乎
安裝環境、挑選主題、上傳 GitHub
來～上教材：資訊是參考這邊（英文好的小夥伴可以打開來執行了）
https://themes.gohugo.io/themes/hugo-papermod/ https://theplaybook.dev/docs/deploy-hugo-to-github-pages/
https://www.youtube.com/watch?v=_QSr2_pxIJs
安裝 Hugo 並創建新網站 brew install hugo hugo new site theplaybook-demo -f yml 使用 Homebrew 安裝 Hugo，並執行 hugo new site &amp;lt;site_name&amp;gt; 來創建一個新的網站資料夾 &amp;lt;site_name&amp;gt;，並包含 Hugo 的模板。 作者這邊執行完後有做cd到他建立的theplaybook-demo，所以自己建立時可以檢查一下，自己有沒有確實在建立的檔案裡面。
設定 baseurl 找到baseURL 目前先不要設定 baseurl，保持空白。
創建新頁面 hugo new docs/test.md
用 hugo new 創建一個新的頁面。打開 test 文件，並將 draft: 設為false ，否則頁面將無法呈現。可以在 test. md 中添加隨便的內容。
執行 hugo server 可以在本地端的 localhost:1313 測試應用程式，但如果沒有設置佈景主題，可能會顯示佈局錯誤。</description>
    </item>
    <item>
      <title>About</title>
      <link>https://YuHsinTengCindy.github.io/about/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://YuHsinTengCindy.github.io/about/about/</guid>
      <description>嗨 我是 Cindy 小幸 Hello I’m Cindy, this is my blog 程式學習成長中
在這邊分享我的旅行故事、程式學習以及生活點滴！
之後會分享跟多關於我的點滴</description>
    </item>
  </channel>
</rss>
